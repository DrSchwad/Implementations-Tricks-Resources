{"title":"C. Travelling Salesman Problem","contestId":"1503","contestName":"Codeforces Round #712 (Div. 1)","problemIndex":"C","timeLimit":"2 seconds","memLimit":"256 megabytes","inputFormat":"standard input","outputFormat":"standard output","problemHtml":"<p>There are $$$n$$$ cities numbered from $$$1$$$ to $$$n$$$, and city $$$i$$$ has beauty $$$a_i$$$.</p><p>A salesman wants to start at city $$$1$$$, visit every city exactly once, and return to city $$$1$$$.</p><p>For all $$$i\\ne j$$$, a flight from city $$$i$$$ to city $$$j$$$ costs $$$\\max(c_i,a_j-a_i)$$$ dollars, where $$$c_i$$$ is the price floor enforced by city $$$i$$$. Note that there is no absolute value. Find the minimum total cost for the salesman to complete his trip.</p>","inSpecsHtml":"<div class=\"section-title\">Input</div><p>The first line contains a single integer $$$n$$$ ($$$2\\le n\\le 10^5$$$) — the number of cities.</p><p>The $$$i$$$-th of the next $$$n$$$ lines contains two integers $$$a_i$$$, $$$c_i$$$ ($$$0\\le a_i,c_i\\le 10^9$$$) — the beauty and price floor of the $$$i$$$-th city.</p>","outSpecsHtml":"<div class=\"section-title\">Output</div><p>Output a single integer — the minimum total cost.</p>","noteHtml":"<div class=\"section-title\">Note</div><p>In the first test case, we can travel in order $$$1\\to 3\\to 2\\to 1$$$. </p><ul> <li> The flight $$$1\\to 3$$$ costs $$$\\max(c_1,a_3-a_1)=\\max(9,4-1)=9$$$. </li><li> The flight $$$3\\to 2$$$ costs $$$\\max(c_3, a_2-a_3)=\\max(1,2-4)=1$$$. </li><li> The flight $$$2\\to 1$$$ costs $$$\\max(c_2,a_1-a_2)=\\max(1,1-2)=1$$$. </li></ul><p></p><p>The total cost is $$$11$$$, and we cannot do better.</p>","sampleTestcases":[{"id":1617460652745,"input":"3\n1 9\n2 1\n4 1\n","output":"11\n"},{"id":1617460652746,"input":"6\n4 2\n8 4\n3 0\n2 3\n7 1\n0 1\n","output":"13\n"}],"submitUrl":"https://codeforces.com/contest/1503/submit","language":"c++"}