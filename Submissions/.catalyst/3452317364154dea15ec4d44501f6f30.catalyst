{"title":"F. Magnets","contestId":"1491","contestName":"Codeforces Global Round 13","problemIndex":"F","timeLimit":"1 second","memLimit":"256 megabytes","inputFormat":"standard input","outputFormat":"standard output","problemHtml":"<p><span class=\"tex-font-style-it\">This is an interactive problem.</span></p><p>Kochiya Sanae is playing with magnets. Realizing that some of those magnets are demagnetized, she is curious to find them out.</p><p>There are $$$n$$$ magnets, which can be of the following $$$3$$$ types:</p><ul><li> <span class=\"tex-font-style-tt\">N</span> </li><li> <span class=\"tex-font-style-tt\">S</span> </li><li> <span class=\"tex-font-style-tt\">-</span> — these magnets are demagnetized.</li></ul> <p>Note that <span class=\"tex-font-style-bf\">you don't know</span> the types of these magnets beforehand.</p><p>You have a machine which can measure the force between the magnets, and you can use it <span class=\"tex-font-style-bf\">at most</span> $$$n+\\lfloor \\log_2n\\rfloor$$$ times.</p><p>You can put some magnets to the left part of the machine and some to the right part of the machine, and launch the machine. Obviously, you can put one magnet to at most one side (you don't have to put all magnets). You can put the same magnet in different queries.</p><p>Then the machine will tell the force these magnets produce. Formally, let $$$n_1,s_1$$$ be the number of <span class=\"tex-font-style-tt\">N</span> and <span class=\"tex-font-style-tt\">S</span> magnets correspondently on the left and $$$n_2,s_2$$$ — on the right. Then the force between them would be $$$n_1n_2+s_1s_2-n_1s_2-n_2s_1$$$. Please note that the force is a <span class=\"tex-font-style-bf\">signed</span> value.</p><p>However, when the <span class=\"tex-font-style-bf\">absolute</span> value of the force is <span class=\"tex-font-style-bf\">strictly larger than</span> $$$n$$$, the machine will crash into pieces.</p><p>You need to find <span class=\"tex-font-style-bf\">all</span> magnets of type <span class=\"tex-font-style-tt\">-</span> (all demagnetized ones), <span class=\"tex-font-style-bf\">without breaking the machine</span>.</p><p><span class=\"tex-font-style-bf\">Note that the interactor is not adaptive</span>. The types of the magnets are fixed before the start of the interaction and do not change with queries.</p><p>It is guaranteed that there are <span class=\"tex-font-style-bf\">at least</span> $$$2$$$ magnets whose type is not <span class=\"tex-font-style-tt\">-</span>, and <span class=\"tex-font-style-bf\">at least</span> $$$1$$$ magnet of type <span class=\"tex-font-style-tt\">-</span>.</p>","inSpecsHtml":"<div class=\"section-title\">Input</div><p>The first line contains a single integer $$$t$$$ ($$$1 \\leq t \\leq 100$$$) — the number of test cases.</p>","outSpecsHtml":null,"noteHtml":"<div class=\"section-title\">Note</div><p>The empty lines in the sample are just for you to better understand the interaction process. <span class=\"tex-font-style-bf\">You're not required to print them</span>.</p><p>In the sample, the types of the magnets are <span class=\"tex-font-style-tt\">NN</span><span class=\"tex-font-style-tt\">-</span><span class=\"tex-font-style-tt\">-</span>.</p><p>At first, you put the third magnet on the left and the fourth one on the right. Both of them have type <span class=\"tex-font-style-tt\">-</span>, thus no force is produced.</p><p>Then you put the first magnet on the left and the second and third one on the right. The third magnet has type <span class=\"tex-font-style-tt\">-</span>, while the other two magnets are of type <span class=\"tex-font-style-tt\">N</span>, so the force produced is $$$1$$$.</p><p>In the following two queries, the force is $$$0$$$ since there is only a magnet with property <span class=\"tex-font-style-tt\">-</span> on the right.</p><p>Then we can determine that the magnets of type <span class=\"tex-font-style-tt\">-</span> are the third and the fourth one, so we should print <span class=\"tex-font-style-tt\">! 2 3 4</span> and exit.</p>","sampleTestcases":[{"id":1620029762567,"input":"1\n4\n\n\n\n0\n\n\n\n1\n\n\n\n0\n\n\n\n0","output":"\n\n? 1 1\n3\n4\n\n? 1 2\n1\n2 3\n\n? 1 1\n1\n4\n\n? 1 1\n1\n3\n\n! 2 3 4\n"}],"submitUrl":"https://codeforces.com/contest/1491/submit","language":"c++","editorial":"<div><p><span class=\"tex-font-style-bf\">Hint 1</span></p><p>Try to construct a solution that works in $$$2n$$$ queries.</p><p><span class=\"tex-font-style-bf\">Hint 2</span></p><p>Try to find the second magnet which is not '-'.</p><p><span class=\"tex-font-style-bf\">Tutorial</span></p><p>It seems this problem needs some random technique, but here is a determinate solution:</p><p>We just try to find a not demagnetized magnet.</p><p>You can go through the following method to find one: </p><p>First put the first magnet in the left.</p><p>Then ask all the other magnets with the left pile.</p><p>If we got a non-zero answer, we find a valid magnet; else we just put this magnet in the left.</p><p>It can be proven later that we will always be able to find a valid magnet.</p><p>Then use this magnet to try on all other magnets.</p><p>This process form a solution requiring at most $$$2n-2$$$ queries.</p><p>However, when we look back at this solution we'll realize that there is a huge waste of information in the previous queries.</p><p>As all the previous answers are $$$0$$$, it's easy to prove that the magnet we found is the <span class=\"tex-font-style-bf\">second</span> one we have selected.</p><p>Since we know nothing about the right part, we can simply check the magnets in the right one by one.</p><p>However, you have known that there is only $$$1$$$ magnetic magnet in the left, so you can do a binary search to seek for the answer.</p><p>The maximum number of queries is $$$n-1+\\lceil\\log_2n\\rceil$$$, which perfectly matches the limit.</p></div>"}