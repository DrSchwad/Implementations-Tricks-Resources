{"title":"D. Useful Edges","contestId":"1483","contestName":"Codeforces Round #709 (Div. 1, based on Technocup 2021 Final Round)","problemIndex":"D","timeLimit":"5 seconds","memLimit":"512 megabytes","inputFormat":"standard input","outputFormat":"standard output","problemHtml":"<p>You are given a weighted undirected graph on $$$n$$$ vertices along with $$$q$$$ triples $$$(u, v, l)$$$, where in each triple $$$u$$$ and $$$v$$$ are vertices and $$$l$$$ is a positive integer. An edge $$$e$$$ is called <span class=\"tex-font-style-it\">useful</span> if there is at least one triple $$$(u, v, l)$$$ and a path (not necessarily simple) with the following properties:</p><ul> <li> $$$u$$$ and $$$v$$$ are the endpoints of this path, </li><li> $$$e$$$ is one of the edges of this path, </li><li> the sum of weights of all edges on this path doesn't exceed $$$l$$$. </li></ul><p>Please print the number of useful edges in this graph.</p>","inSpecsHtml":"<div class=\"section-title\">Input</div><p>The first line contains two integers $$$n$$$ and $$$m$$$ ($$$2\\leq n\\leq 600$$$, $$$0\\leq m\\leq \\frac{n(n-1)}2$$$). </p><p>Each of the following $$$m$$$ lines contains three integers $$$u$$$, $$$v$$$ and $$$w$$$ ($$$1\\leq u, v\\leq n$$$, $$$u\\neq v$$$, $$$1\\leq w\\leq 10^9$$$), denoting an edge connecting vertices $$$u$$$ and $$$v$$$ and having a weight $$$w$$$.</p><p>The following line contains the only integer $$$q$$$ ($$$1\\leq q\\leq \\frac{n(n-1)}2$$$) denoting the number of triples.</p><p>Each of the following $$$q$$$ lines contains three integers $$$u$$$, $$$v$$$ and $$$l$$$ ($$$1\\leq u, v\\leq n$$$, $$$u\\neq v$$$, $$$1\\leq l\\leq 10^9$$$) denoting a triple $$$(u, v, l)$$$.</p><p>It's guaranteed that: </p><ul> <li> the graph doesn't contain loops or multiple edges; </li><li> all pairs $$$(u, v)$$$ in the triples are also different. </li></ul>","outSpecsHtml":"<div class=\"section-title\">Output</div><p>Print a single integer denoting the number of useful edges in the graph.</p>","noteHtml":"<div class=\"section-title\">Note</div><p>In the first example each edge is useful, except the one of weight $$$5$$$.</p><p>In the second example only edge between $$$1$$$ and $$$2$$$ is useful, because it belongs to the path $$$1-2$$$, and $$$10 \\leq 11$$$. The edge between $$$3$$$ and $$$4$$$, on the other hand, is not useful.</p><p>In the third example both edges are useful, for there is a path $$$1-2-3-2$$$ of length exactly $$$5$$$. Please note that the path may pass through a vertex more than once.</p>","sampleTestcases":[{"id":1619013266620,"input":"4 6\n1 2 1\n2 3 1\n3 4 1\n1 3 3\n2 4 3\n1 4 5\n1\n1 4 4\n","output":"5\n","result":{"id":1619013266620,"stdout":"5\n","stderr":"","exitcode":0,"signal":null,"time":101,"timeout":false}},{"id":1619013266621,"input":"4 2\n1 2 10\n3 4 10\n6\n1 2 11\n1 3 11\n1 4 11\n2 3 11\n2 4 11\n3 4 9\n","output":"1\n","result":{"id":1619013266621,"stdout":"1\n","stderr":"","exitcode":0,"signal":null,"time":95,"timeout":false}},{"id":1619013266622,"input":"3 2\n1 2 1\n2 3 2\n1\n1 2 5\n","output":"2\n","result":{"id":1619013266622,"stdout":"2\n","stderr":"","exitcode":0,"signal":null,"time":85,"timeout":false}}],"submitUrl":"https://codeforces.com/contest/1483/submit","language":"c++","langId":"54","editorial":"<div><p>Find all distances between vertices via Floyd's algorithm for $$$O(n^3)$$$. Consider all triples with fixed endpoint, say, $$$v$$$. Let's find all useful edges corresponding to such triples.</p><p>An edge $$$(a, b, w)$$$ is useful, if there is a triple $$$(v, u_i, l_i)$$$ with</p><p>$$$$$$dist(v, a) + w + dist(b, u_i)\\leq l_i\\Leftrightarrow -l_i + dist(u_i, b)\\leq -w - dist(v, a).$$$$$$</p><p>Note that the right hand side depends only on the fixed vertex $$$v$$$ and the edge itself, so we are going to minimize the left hand side over all possible triples. It can be done using Dijkstra in $$$O(n^2)$$$ if we initialize the distance to all $$$u_i$$$ with $$$-l_i$$$. After we are done for all vertices $$$v$$$, there only remains to check for each edge whether it has been marked useful for any vertex $$$v$$$.</p></div>"}