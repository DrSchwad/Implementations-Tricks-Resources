{"title":"C. Bottom-Tier Reversals","contestId":"1558","problemIndex":"C","timeLimit":"2 seconds","memLimit":"512 megabytes","inputFormat":"standard input","outputFormat":"standard output","problemHtml":"<p>You have a permutation: an array $$$a = [a_1, a_2, \\ldots, a_n]$$$ of distinct integers from $$$1$$$ to $$$n$$$. The length of the permutation $$$n$$$ is odd.</p><p>You need to sort the permutation in increasing order.</p><p>In one step, you can choose any prefix of the permutation with an odd length and reverse it. Formally, if $$$a = [a_1, a_2, \\ldots, a_n]$$$, you can choose any odd integer $$$p$$$ between $$$1$$$ and $$$n$$$, inclusive, and set $$$a$$$ to $$$[a_p, a_{p-1}, \\ldots, a_1, a_{p+1}, a_{p+2}, \\ldots, a_n]$$$.</p><p>Find a way to sort $$$a$$$ using no more than $$$\\frac{5n}{2}$$$ reversals of the above kind, or determine that such a way doesn&apos;t exist. The number of reversals doesn&apos;t have to be minimized.</p>","inSpecsHtml":"<div class=\"section-title\">Input</div><p>Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 100$$$). Description of the test cases follows.</p><p>The first line of each test case contains a single integer $$$n$$$ ($$$3 \\le n \\le 2021$$$; $$$n$$$ is odd)&#xA0;&#x2014; the length of the permutation.</p><p>The second line contains $$$n$$$ distinct integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\le a_i \\le n$$$)&#xA0;&#x2014; the permutation itself. </p><p>It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2021$$$.</p>","outSpecsHtml":"<div class=\"section-title\">Output</div><p>For each test case, if it&apos;s impossible to sort the given permutation in at most $$$\\frac{5n}{2}$$$ reversals, print a single integer $$$-1$$$.</p><p>Otherwise, print an integer $$$m$$$ ($$$0 \\le m \\le \\frac{5n}{2}$$$), denoting the number of reversals in your sequence of steps, followed by $$$m$$$ integers $$$p_i$$$ ($$$1 \\le p_i \\le n$$$; $$$p_i$$$ is odd), denoting the lengths of the prefixes of $$$a$$$ to be reversed, in chronological order.</p><p>Note that $$$m$$$ doesn&apos;t have to be minimized. If there are multiple answers, print any.</p>","noteHtml":"<div class=\"section-title\">Note</div><p>In the first test case, the permutation is already sorted. Any even number of reversals of the length $$$3$$$ prefix doesn&apos;t change that fact.</p><p>In the second test case, after reversing the prefix of length $$$3$$$ the permutation will change to $$$[5, 4, 3, 2, 1]$$$, and then after reversing the prefix of length $$$5$$$ the permutation will change to $$$[1, 2, 3, 4, 5]$$$.</p><p>In the third test case, it&apos;s impossible to sort the permutation.</p>","sampleTestcases":[{"id":1629815729559,"input":"3\n3\n1 2 3\n5\n3 4 5 2 1\n3\n2 1 3","output":"4\n3 3 3 3\n2\n3 5\n-1\n"}],"submitUrl":"https://codeforces.com/contest/1558/submit","language":"c++","isPartOfContest":true}