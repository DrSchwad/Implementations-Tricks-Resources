{"title":"A. Balance the Bits","contestId":"1503","contestName":"Codeforces Round #712 (Div. 1)","problemIndex":"A","timeLimit":"1 second","memLimit":"256 megabytes","inputFormat":"standard input","outputFormat":"standard output","problemHtml":"<p>A sequence of brackets is called balanced if one can turn it into a valid math expression by adding characters '<span class=\"tex-font-style-tt\">+</span>' and '<span class=\"tex-font-style-tt\">1</span>'. For example, sequences '<span class=\"tex-font-style-tt\">(())()</span>', '<span class=\"tex-font-style-tt\">()</span>', and '<span class=\"tex-font-style-tt\">(()(()))</span>' are balanced, while '<span class=\"tex-font-style-tt\">)(</span>', '<span class=\"tex-font-style-tt\">(()</span>', and '<span class=\"tex-font-style-tt\">(()))(</span>' are not.</p><p>You are given a binary string $$$s$$$ of length $$$n$$$. Construct two balanced bracket sequences $$$a$$$ and $$$b$$$ of length $$$n$$$ such that for all $$$1\\le i\\le n$$$: </p><ul> <li> if $$$s_i=1$$$, then $$$a_i=b_i$$$ </li><li> if $$$s_i=0$$$, then $$$a_i\\ne b_i$$$ </li></ul><p>If it is impossible, you should report about it.</p>","inSpecsHtml":"<div class=\"section-title\">Input</div><p>The first line contains a single integer $$$t$$$ ($$$1\\le t\\le 10^4$$$) â€” the number of test cases.</p><p>The first line of each test case contains a single integer $$$n$$$ ($$$2\\le n\\le 2\\cdot 10^5$$$, $$$n$$$ is even).</p><p>The next line contains a string $$$s$$$ of length $$$n$$$, consisting of characters <span class=\"tex-font-style-tt\">0</span> and <span class=\"tex-font-style-tt\">1</span>.</p><p>The sum of $$$n$$$ across all test cases does not exceed $$$2\\cdot 10^5$$$.</p>","outSpecsHtml":"<div class=\"section-title\">Output</div><p>If such two balanced bracked sequences exist, output \"<span class=\"tex-font-style-tt\">YES</span>\" on the first line, otherwise output \"<span class=\"tex-font-style-tt\">NO</span>\". You can print each letter in any case (upper or lower).</p><p>If the answer is \"<span class=\"tex-font-style-tt\">YES</span>\", output the balanced bracket sequences $$$a$$$ and $$$b$$$ satisfying the conditions on the next two lines.</p><p>If there are multiple solutions, you may print any.</p>","noteHtml":"<div class=\"section-title\">Note</div><p>In the first test case, $$$a=$$$\"<span class=\"tex-font-style-tt\">()()()</span>\" and $$$b=$$$\"<span class=\"tex-font-style-tt\">((()))</span>\". The characters are equal in positions $$$1$$$, $$$3$$$, $$$4$$$, and $$$6$$$, which are the exact same positions where $$$s_i=1$$$.</p><p>In the second test case, $$$a=$$$\"<span class=\"tex-font-style-tt\">()()((()))</span>\" and $$$b=$$$\"<span class=\"tex-font-style-tt\">(())()()()</span>\". The characters are equal in positions $$$1$$$, $$$4$$$, $$$5$$$, $$$7$$$, $$$8$$$, $$$10$$$, which are the exact same positions where $$$s_i=1$$$.</p><p>In the third test case, there is no solution.</p>","sampleTestcases":[{"id":1617463234989,"input":"3\n6\n101101\n10\n1001101101\n4\n1100\n","output":"YES\n()()()\n((()))\nYES\n()()((()))\n(())()()()\nNO\n","result":{"id":1617463234989,"stdout":"YES\n()()()\n((()))\nYES\n()((()))()\n(()((())))\nNO\n","stderr":"","exitcode":0,"signal":null,"time":92,"timeout":false}}],"submitUrl":"https://codeforces.com/contest/1503/submit","language":"c++","langId":"54","editorial":"<div><p>Any balanced bracket sequence must begin with '<span class=\"tex-font-style-tt\">(</span>' and end with '<span class=\"tex-font-style-tt\">)</span>'. Therefore, $$$a$$$ and $$$b$$$ must agree in the first and last positions, so we require $$$s_1=s_n=1$$$ or a solution doesn't exist.</p><p>The total number of open brackets in $$$a$$$ and $$$b$$$ must be $$$n$$$, which is even. Each $$$1$$$ bit in $$$s$$$ creates an even number of open brackets and each $$$0$$$ bit creates an odd number of open brackets. Therefore, there must be an even number of $$$0$$$ bits, or a solution doesn't exist. Note that the number of $$$1$$$ bits also must be even.</p><p>Assuming these conditions hold, let's construct a solution. Suppose there are $$$k$$$ positions where $$$s_i=1$$$. We will make the first $$$\\frac k2$$$ positions open in both $$$a$$$ and $$$b$$$, and we will make the last $$$\\frac k2$$$ positions closed in both $$$a$$$ and $$$b$$$. Then, the $$$0$$$ bits in $$$s$$$ will alternate between which string gets the open bracket.</p></div>"}