{"title":"F. Xor-Paths","contestId":"1006","contestName":"Codeforces Round #498 (Div. 3)","problemIndex":"F","timeLimit":"3 seconds","memLimit":"256 megabytes","inputFormat":"standard input","outputFormat":"standard output","problemHtml":"<p>There is a rectangular grid of size $$$n \\times m$$$. Each cell has a number written on it; the number on the cell ($$$i, j$$$) is $$$a_{i, j}$$$. Your task is to calculate the number of paths from the upper-left cell ($$$1, 1$$$) to the bottom-right cell ($$$n, m$$$) meeting the following constraints:</p><ul> <li> You can move to the right or to the bottom only. Formally, from the cell ($$$i, j$$$) you may move to the cell ($$$i, j + 1$$$) or to the cell ($$$i + 1, j$$$). The target cell can't be outside of the grid. </li><li> The <span class=\"tex-font-style-it\">xor</span> of all the numbers on the path from the cell ($$$1, 1$$$) to the cell ($$$n, m$$$) must be equal to $$$k$$$ (<span class=\"tex-font-style-it\">xor</span> operation is the bitwise exclusive OR, it is represented as '<span class=\"tex-font-style-tt\">^</span>' in Java or C++ and \"<span class=\"tex-font-style-tt\">xor</span>\" in Pascal). </li></ul><p>Find the number of such paths in the given grid.</p>","inSpecsHtml":"<div class=\"section-title\">Input</div><p>The first line of the input contains three integers $$$n$$$, $$$m$$$ and $$$k$$$ ($$$1 \\le n, m \\le 20$$$, $$$0 \\le k \\le 10^{18}$$$) — the height and the width of the grid, and the number $$$k$$$.</p><p>The next $$$n$$$ lines contain $$$m$$$ integers each, the $$$j$$$-th element in the $$$i$$$-th line is $$$a_{i, j}$$$ ($$$0 \\le a_{i, j} \\le 10^{18}$$$).</p>","outSpecsHtml":"<div class=\"section-title\">Output</div><p>Print one integer — the number of paths from ($$$1, 1$$$) to ($$$n, m$$$) with <span class=\"tex-font-style-it\">xor</span> sum equal to $$$k$$$.</p>","noteHtml":"<div class=\"section-title\">Note</div><p>All the paths from the first example: </p><ul> <li> $$$(1, 1) \\rightarrow (2, 1) \\rightarrow (3, 1) \\rightarrow (3, 2) \\rightarrow (3, 3)$$$; </li><li> $$$(1, 1) \\rightarrow (2, 1) \\rightarrow (2, 2) \\rightarrow (2, 3) \\rightarrow (3, 3)$$$; </li><li> $$$(1, 1) \\rightarrow (1, 2) \\rightarrow (2, 2) \\rightarrow (3, 2) \\rightarrow (3, 3)$$$. </li></ul><p>All the paths from the second example: </p><ul> <li> $$$(1, 1) \\rightarrow (2, 1) \\rightarrow (3, 1) \\rightarrow (3, 2) \\rightarrow (3, 3) \\rightarrow (3, 4)$$$; </li><li> $$$(1, 1) \\rightarrow (2, 1) \\rightarrow (2, 2) \\rightarrow (3, 2) \\rightarrow (3, 3) \\rightarrow (3, 4)$$$; </li><li> $$$(1, 1) \\rightarrow (2, 1) \\rightarrow (2, 2) \\rightarrow (2, 3) \\rightarrow (2, 4) \\rightarrow (3, 4)$$$; </li><li> $$$(1, 1) \\rightarrow (1, 2) \\rightarrow (2, 2) \\rightarrow (2, 3) \\rightarrow (3, 3) \\rightarrow (3, 4)$$$; </li><li> $$$(1, 1) \\rightarrow (1, 2) \\rightarrow (1, 3) \\rightarrow (2, 3) \\rightarrow (3, 3) \\rightarrow (3, 4)$$$. </li></ul>","sampleTestcases":[{"id":1616290533517,"input":"3 3 11\n2 1 5\n7 10 0\n12 6 4\n","output":"3\n","result":{"id":1616290533517,"stdout":"3\n","stderr":"","exitcode":0,"signal":null,"time":113,"timeout":false}},{"id":1616290533518,"input":"3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n","output":"5\n","result":{"id":1616290533518,"stdout":"5\n","stderr":"","exitcode":0,"signal":null,"time":113,"timeout":false}},{"id":1616290533519,"input":"3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n","output":"0\n","result":{"id":1616290533519,"stdout":"0\n","stderr":"","exitcode":0,"signal":null,"time":114,"timeout":false}}],"submitUrl":"https://codeforces.com/contest/1006/submit","language":"c++","langId":"61"}