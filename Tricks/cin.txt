** cin.ignore **

// istream::ignore example
#include <iostream>     // std::cin, std::cout

int main () {
	char first, last;

	std::cout << "Please, enter your first name followed by your surname: ";

	first = std::cin.get();     // get one character
	std::cin.ignore(256,' ');   // ignore until space

	last = std::cin.get();      // get one character

	std::cout << "Your initials are " << first << last << '\n';

	return 0;
}

** getline(cin, str) **

// extract to string
#include <iostream>
#include <string>

int main () {
	std::string name;

	std::cout << "Please, enter your full name: ";
	std::getline (std::cin,name);
	std::cout << "Hello, " << name << "!\n";

	return 0;
}

** stringstream **

// CPP program to count words in a string 
// using stringstream. 
#include <bits/stdc++.h> 
using namespace std; 
  
int countWords(string str) 
{ 
    // breaking input into word using string stream 
    stringstream s(str); // Used for breaking words 
    string word; // to store individual words 
  
    int count = 0; 
    while (s >> word) 
        count++; 
    return count; 
} 
  
// Driver code 
int main() 
{ 
    string s = "geeks for geeks geeks "
               "contribution placements"; 
    cout << " Number of words are: " << countWords(s); 
    return 0; 
} 

** cin.ws and cin.peek **

// istream::peek example
#include <iostream>     // std::cin, std::cout
#include <string>       // std::string
#include <cctype>       // std::isdigit

int main () {

	std::cout << "Please, enter a number or a word: ";
	std::cout.flush();    // ensure output is written

	std::cin >> std::ws;  // eat up any leading white spaces
	int c = std::cin.peek();  // peek character

	if ( c == EOF ) return 1;
	if ( std::isdigit(c) )
	{
	int n;
	std::cin >> n;
	std::cout << "You entered the number: " << n << '\n';
	}
	else
	{
	std::string str;
	std::cin >> str;
	std::cout << "You entered the word: " << str << '\n';
	}

	return 0;
}